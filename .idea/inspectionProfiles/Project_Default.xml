<component name="InspectionProjectProfileManager">
  <profile version="1.0" is_locked="false">
    <option name="myName" value="Project Default" />
    <option name="myLocal" value="false" />
    <inspection_tool class="AbstractClassExtendsConcreteClass" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="AbstractClassWithoutAbstractMethods" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="AbstractMethodCallInConstructor" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="AbstractMethodOverridesAbstractMethod" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="AbstractMethodOverridesConcreteMethod" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="AnonymousClassComplexity" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="m_limit" value="10" />
    </inspection_tool>
    <inspection_tool class="AnonymousClassMethodCount" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="m_limit" value="10" />
    </inspection_tool>
    <inspection_tool class="AssignmentToCatchBlockParameter" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="AssignmentToMethodParameter" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="ignoreTransformationOfOriginalParameter" value="false" />
    </inspection_tool>
    <inspection_tool class="AssignmentUsedAsCondition" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="BoxingBoxedValue" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="BreakStatementWithLabelJS" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="BusyWait" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="CStyleArrayDeclaration" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="CanBeFinal" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="REPORT_CLASSES" value="true" />
      <option name="REPORT_METHODS" value="true" />
      <option name="REPORT_FIELDS" value="true" />
    </inspection_tool>
    <inspection_tool class="CastThatLosesPrecision" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="ignoreIntegerCharCasts" value="false" />
    </inspection_tool>
    <inspection_tool class="ChainedEquality" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="CharacterComparison" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="CheckJsfComponentUnderViewTag" enabled="false" level="INFO" enabled_by_default="false" />
    <inspection_tool class="ClassCoupling" enabled="false" level="WARNING" enabled_by_default="false">
      <option name="m_includeJavaClasses" value="false" />
      <option name="m_includeLibraryClasses" value="true" />
      <option name="m_limit" value="15" />
    </inspection_tool>
    <inspection_tool class="ClassEscapesItsScope" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="ClassInTopLevelPackage" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="ClassInheritanceDepth" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="m_limit" value="10" />
    </inspection_tool>
    <inspection_tool class="ClassMayBeInterface" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="ClassNameDiffersFromFileName" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="ClassNamingConvention" enabled="false" level="WARNING" enabled_by_default="false">
      <option name="m_regex" value="[A-Z][A-Za-z]*" />
      <option name="m_minLength" value="8" />
      <option name="m_maxLength" value="64" />
    </inspection_tool>
    <inspection_tool class="ClassNestingDepth" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="m_limit" value="2" />
    </inspection_tool>
    <inspection_tool class="ClassReferencesSubclass" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="CloneableClassInSecureContext" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="CloneableImplementsClone" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="m_ignoreCloneableDueToInheritance" value="false" />
    </inspection_tool>
    <inspection_tool class="CompareToUsesNonFinalVariable" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="ConfusingFloatingPointLiteral" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="ConfusingMainMethod" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="ConstantConditions" enabled="false" level="WARNING" enabled_by_default="false">
      <option name="SUGGEST_NULLABLE_ANNOTATIONS" value="false" />
      <option name="DONT_REPORT_TRUE_ASSERT_STATEMENTS" value="false" />
    </inspection_tool>
    <inspection_tool class="ConstantDeclaredInAbstractClass" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="ConstantNamingConvention" enabled="false" level="WARNING" enabled_by_default="false">
      <option name="onlyCheckImmutables" value="false" />
      <option name="m_regex" value="[A-Z_]*" />
      <option name="m_minLength" value="5" />
      <option name="m_maxLength" value="32" />
    </inspection_tool>
    <inspection_tool class="ConstructorCount" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="ignoreDeprecatedConstructors" value="false" />
      <option name="m_limit" value="5" />
    </inspection_tool>
    <inspection_tool class="ContinueStatementJS" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="ContinueStatementWithLabel" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="CyclomaticComplexity" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="m_limit" value="10" />
    </inspection_tool>
    <inspection_tool class="DeclareCollectionAsInterface" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="ignoreLocalVariables" value="false" />
      <option name="ignorePrivateMethodsAndFields" value="false" />
    </inspection_tool>
    <inspection_tool class="DefaultNotLastCaseInSwitchJS" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="DollarSignInName" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="DoubleCheckedLocking" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="ignoreOnVolatileVariables" value="false" />
    </inspection_tool>
    <inspection_tool class="EjbErrorInspection" level="WARNING" enabled="true" />
    <inspection_tool class="EmptyCatchBlockJS" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="EmptyFinallyBlockJS" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="EmptySynchronizedStatement" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="EqualsAndHashcode" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="EqualsUsesNonFinalVariable" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="FacesModelInspection" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="FallthruInSwitchStatement" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="FieldHidesSuperclassField" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="m_ignoreInvisibleFields" value="false" />
    </inspection_tool>
    <inspection_tool class="FieldMayBeStatic" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="FloatingPointEquality" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="ForLoopReplaceableByWhile" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="m_ignoreLoopsWithoutConditions" value="false" />
    </inspection_tool>
    <inspection_tool class="GroovyGetterCallCanBePropertyAccess" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="GroovyListGetCanBeKeyedAccess" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="GroovyListSetCanBeKeyedAccess" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="GroovyMapGetCanBeKeyedAccess" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="GroovyMapPutCanBeKeyedAccess" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="GroovySetterCallCanBePropertyAccess" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="HashCodeUsesNonFinalVariable" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="InnerClassMayBeStatic" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="InnerClassVariableHidesOuterClassVariable" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="m_ignoreInvisibleFields" value="true" />
    </inspection_tool>
    <inspection_tool class="InstanceMethodNamingConvention" enabled="false" level="WARNING" enabled_by_default="false">
      <option name="m_regex" value="[a-z][A-Za-z]*" />
      <option name="m_minLength" value="1" />
      <option name="m_maxLength" value="32" />
    </inspection_tool>
    <inspection_tool class="InstanceVariableNamingConvention" enabled="false" level="WARNING" enabled_by_default="false">
      <option name="m_regex" value="m_[a-z][A-Za-z]*" />
      <option name="m_minLength" value="1" />
      <option name="m_maxLength" value="32" />
    </inspection_tool>
    <inspection_tool class="InstanceVariableUninitializedUse" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="m_ignorePrimitives" value="false" />
      <option name="annotationNamesString" value="" />
    </inspection_tool>
    <inspection_tool class="InstanceofCatchParameter" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="InstanceofThis" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="IntegerDivisionInFloatingPointContext" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="InterfaceNamingConvention" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="m_regex" value="[A-Z][A-Za-z]*" />
      <option name="m_minLength" value="1" />
      <option name="m_maxLength" value="64" />
    </inspection_tool>
    <inspection_tool class="JavaDoc" enabled="false" level="WARNING" enabled_by_default="false">
      <option name="TOP_LEVEL_CLASS_OPTIONS">
        <value>
          <option name="ACCESS_JAVADOC_REQUIRED_FOR" value="public" />
          <option name="REQUIRED_TAGS" value="" />
        </value>
      </option>
      <option name="INNER_CLASS_OPTIONS">
        <value>
          <option name="ACCESS_JAVADOC_REQUIRED_FOR" value="protected" />
          <option name="REQUIRED_TAGS" value="" />
        </value>
      </option>
      <option name="METHOD_OPTIONS">
        <value>
          <option name="ACCESS_JAVADOC_REQUIRED_FOR" value="protected" />
          <option name="REQUIRED_TAGS" value="@return@param@throws or @exception" />
        </value>
      </option>
      <option name="FIELD_OPTIONS">
        <value>
          <option name="ACCESS_JAVADOC_REQUIRED_FOR" value="protected" />
          <option name="REQUIRED_TAGS" value="" />
        </value>
      </option>
      <option name="IGNORE_DEPRECATED" value="false" />
      <option name="IGNORE_JAVADOC_PERIOD" value="true" />
      <option name="IGNORE_DUPLICATED_THROWS" value="false" />
      <option name="IGNORE_POINT_TO_ITSELF" value="false" />
      <option name="myAdditionalJavadocTags" value="" />
    </inspection_tool>
    <inspection_tool class="JavaLangImport" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="JavaLangReflect" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="JavadocReference" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="LiteralAsArgToStringEquals" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="LocalCanBeFinal" enabled="false" level="WARNING" enabled_by_default="false">
      <option name="REPORT_VARIABLES" value="true" />
      <option name="REPORT_PARAMETERS" value="false" />
    </inspection_tool>
    <inspection_tool class="LocalVariableHidingMemberVariable" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="m_ignoreInvisibleFields" value="true" />
      <option name="m_ignoreStaticMethods" value="true" />
    </inspection_tool>
    <inspection_tool class="LoggerInitializedWithForeignClass" enabled="false" level="WARNING" enabled_by_default="false">
      <option name="loggerClassName" value="org.apache.log4j.Logger,org.slf4j.LoggerFactory,org.apache.commons.logging.LogFactory,java.util.logging.Logger" />
      <option name="loggerFactoryMethodName" value="getLogger,getLogger,getLog,getLogger" />
    </inspection_tool>
    <inspection_tool class="MethodCoupling" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="m_includeJavaClasses" value="false" />
      <option name="m_includeLibraryClasses" value="true" />
      <option name="m_limit" value="10" />
    </inspection_tool>
    <inspection_tool class="MethodNameSameAsParentName" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="MethodNamesDifferOnlyByCase" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="MethodOverloadsParentMethod" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="MethodOverridesPrivateMethod" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="MethodOverridesStaticMethod" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="MissortedModifiers" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="m_requireAnnotationsFirst" value="true" />
    </inspection_tool>
    <inspection_tool class="MisspelledCompareTo" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="MisspelledHashcode" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="MisspelledSetUp" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="MisspelledTearDown" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="MultipleTopLevelClassesInFile" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="MultipleTypedDeclaration" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="NativeMethods" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="NestedAssignmentJS" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="NestedConditionalExpressionJS" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="NestedSwitchStatementJS" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="NestedSynchronizedStatement" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="NonExceptionNameEndsWithException" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="NonSerializableWithSerializationMethods" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="NonSynchronizedMethodOverridesSynchronizedMethod" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="NullableProblems" enabled="false" level="WARNING" enabled_by_default="false">
      <option name="REPORT_NULLABLE_METHOD_OVERRIDES_NOTNULL" value="true" />
      <option name="REPORT_NOT_ANNOTATED_METHOD_OVERRIDES_NOTNULL" value="true" />
      <option name="REPORT_NOTNULL_PARAMETER_OVERRIDES_NULLABLE" value="true" />
      <option name="REPORT_NOT_ANNOTATED_PARAMETER_OVERRIDES_NOTNULL" value="true" />
      <option name="REPORT_NOT_ANNOTATED_GETTER" value="true" />
      <option name="REPORT_NOT_ANNOTATED_SETTER_PARAMETER" value="true" />
      <option name="REPORT_ANNOTATION_NOT_PROPAGATED_TO_OVERRIDERS" value="true" />
      <option name="REPORT_NULLS_PASSED_TO_NON_ANNOTATED_METHOD" value="true" />
    </inspection_tool>
    <inspection_tool class="ObsoleteCollection" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="ignoreRequiredObsoleteCollectionTypes" value="false" />
    </inspection_tool>
    <inspection_tool class="OctalAndDecimalIntegersMixed" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="OnDemandImport" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="OverlyComplexArithmeticExpression" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="m_limit" value="6" />
    </inspection_tool>
    <inspection_tool class="OverlyComplexBooleanExpression" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="m_limit" value="5" />
      <option name="m_ignorePureConjunctionsDisjunctions" value="true" />
    </inspection_tool>
    <inspection_tool class="PackageVisibleInnerClass" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="ignoreEnums" value="false" />
      <option name="ignoreInterfaces" value="false" />
    </inspection_tool>
    <inspection_tool class="ParameterHidingMemberVariable" enabled="false" level="WARNING" enabled_by_default="false">
      <option name="m_ignoreInvisibleFields" value="true" />
      <option name="m_ignoreStaticMethodParametersHidingInstanceFields" value="true" />
      <option name="m_ignoreForConstructors" value="true" />
      <option name="m_ignoreForPropertySetters" value="true" />
      <option name="m_ignoreForAbstractMethods" value="true" />
    </inspection_tool>
    <inspection_tool class="ParameterNamingConvention" enabled="false" level="WARNING" enabled_by_default="false">
      <option name="m_regex" value="[a-z][A-Za-z]*" />
      <option name="m_minLength" value="1" />
      <option name="m_maxLength" value="99" />
    </inspection_tool>
    <inspection_tool class="ProtectedInnerClass" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="ignoreEnums" value="false" />
      <option name="ignoreInterfaces" value="false" />
    </inspection_tool>
    <inspection_tool class="ProtectedMemberInFinalClass" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="PublicFieldAccessedInSynchronizedContext" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="PublicInnerClass" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="ignoreEnums" value="false" />
      <option name="ignoreInterfaces" value="false" />
    </inspection_tool>
    <inspection_tool class="ReadObjectAndWriteObjectPrivate" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="ReadResolveAndWriteReplaceProtected" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="RedundantImport" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="SSBasedInspection" enabled="true" level="WARNING" enabled_by_default="true">
      <replaceConfiguration name="UnnecessaryNullCheckWithinInstanceOf" text="$Expr$ != null &amp;&amp; $Expr$ instanceof $Type$" recursive="false" caseInsensitive="false" type="JAVA" reformatAccordingToStyle="true" shortenFQN="true" replacement="$Expr$ instanceof $Type$">
        <constraint name="Expr" within="" contains="" />
        <constraint name="Type" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Replace assertEquals by Hamcrest" text="Assert.assertEquals($text$, $expected$, $found$ );" recursive="false" caseInsensitive="true" type="JAVA" reformatAccordingToStyle="true" shortenFQN="true" replacement="org.junit.Assert.assertThat($text$, $found$, org.hamcrest.Matchers.is($expected$));">
        <constraint name="expected" script="&quot;&quot;" within="" contains="" />
        <constraint name="found" within="" contains="" />
        <constraint name="text" script="&quot;&quot;" minCount="0" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="jmock2mockito" text="$context$.checking(new Expectations(){{&#10;    one( $mock$ ).$method$($params$); will( returnValue( $returnValue$ )); &#10;}});&#10;" recursive="false" caseInsensitive="true" type="JAVA" reformatAccordingToStyle="true" shortenFQN="true" replacement="org.mockito.Mockito.when($mock$.$method$($params$)).thenReturn($returnValue$);&#10;">
        <constraint name="mock" within="" contains="" />
        <constraint name="method" within="" contains="" />
        <constraint name="returnValue" script="&quot;&quot;" within="" contains="" />
        <constraint name="params" within="" contains="" />
        <constraint name="c" within="" contains="" />
        <constraint name="classMockery" script="&quot;&quot;" minCount="0" within="" contains="" />
        <constraint name="context" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="jmock2mockito verify one argThat" text="$context$.checking(new Expectations(){{&#10;    one( $mock$ ).$method$(with($params$));&#10;    $otherStatements$;&#10;}});&#10;" recursive="false" caseInsensitive="true" type="JAVA" reformatAccordingToStyle="true" shortenFQN="true" replacement="$context$.checking(new Expectations(){{&#10;    $otherStatements$;&#10;}});&#10;&#10;Mockito.verify($mock$, Mockito.times(1)).$method$(Mockito.argThat($params$));&#10;">
        <constraint name="mock" within="" contains="" />
        <constraint name="method" within="" contains="" />
        <constraint name="returnValue" script="&quot;&quot;" within="" contains="" />
        <constraint name="params" script="&quot;&quot;" minCount="0" maxCount="2147483647" within="" contains="" />
        <constraint name="c" within="" contains="" />
        <constraint name="classMockery" script="&quot;&quot;" minCount="0" within="" contains="" />
        <constraint name="context" script="&quot;&quot;" within="" contains="" />
        <constraint name="otherStatements" script="&quot;&quot;" maxCount="2147483647" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="jmock2mockito one will" text="$context$.checking(new Expectations(){{&#10;    one( $mock$ ).$method$($params$); will( returnValue( $returnValue$ )); &#10;}});&#10;" recursive="false" caseInsensitive="true" type="JAVA" reformatAccordingToStyle="true" shortenFQN="true" replacement="org.mockito.Mockito.when($mock$.$method$($params$)).thenReturn($returnValue$);&#10;">
        <constraint name="mock" within="" contains="" />
        <constraint name="method" within="" contains="" />
        <constraint name="returnValue" script="&quot;&quot;" within="" contains="" />
        <constraint name="params" script="&quot;&quot;" minCount="0" maxCount="10" within="" contains="" />
        <constraint name="c" within="" contains="" />
        <constraint name="classMockery" script="&quot;&quot;" minCount="0" within="" contains="" />
        <constraint name="context" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="jmock2mockito exact number" text="$context$.checking(new Expectations(){{&#10;    exactly($times$).of( $mock$ ).$method$($params$); will( returnValue( $returnValue$ )); &#10;}});&#10;" recursive="false" caseInsensitive="true" type="JAVA" reformatAccordingToStyle="true" shortenFQN="true" replacement="org.mockito.Mockito.when($mock$.$method$($params$)).thenReturn($returnValue$);&#10;org.mockito.Mockito.verify($mock$, org.mockito.Mockito.times($times$)).$method$($params$);&#10;">
        <constraint name="mock" within="" contains="" />
        <constraint name="method" within="" contains="" />
        <constraint name="returnValue" script="&quot;&quot;" within="" contains="" />
        <constraint name="params" script="&quot;&quot;" minCount="0" maxCount="10" within="" contains="" />
        <constraint name="c" within="" contains="" />
        <constraint name="classMockery" script="&quot;&quot;" minCount="0" within="" contains="" />
        <constraint name="context" within="" contains="" />
        <constraint name="times" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="jmock2mockito create mock" text="$context$.mock($JavaMailSender$.class, $name$)" recursive="false" caseInsensitive="true" type="JAVA" reformatAccordingToStyle="true" shortenFQN="true" replacement="Mockito.mock($JavaMailSender$.class, $name$)">
        <constraint name="context" script="&quot;&quot;" nameOfExprType="Mockery" within="" contains="" />
        <constraint name="JavaMailSender" script="&quot;&quot;" within="" contains="" />
        <constraint name="name" script="&quot;&quot;" minCount="0" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="jmock2mockito never" text="$context$.checking(new Expectations(){{&#10;    never( $mock$ ).$method$(with($params$));&#10;    $otherStatements$;&#10;}});&#10;" recursive="false" caseInsensitive="true" type="JAVA" reformatAccordingToStyle="true" shortenFQN="true" replacement="$context$.checking(new Expectations(){{&#10;    $otherStatements$;&#10;}});&#10;Mockito.verify($mock$, Mockito.never()).$method$(Mockito.argThat($params$));&#10;">
        <constraint name="context" within="" contains="" />
        <constraint name="mock" within="" contains="" />
        <constraint name="method" within="" contains="" />
        <constraint name="params" script="&quot;&quot;" minCount="0" maxCount="2147483647" within="" contains="" />
        <constraint name="returnValue" within="" contains="" />
        <constraint name="otherStatements" script="&quot;&quot;" minCount="0" maxCount="2147483647" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="jmock2mockito allowing" text="$context$.checking(new Expectations(){{&#10;    allowing( $mock$ ).$method$($params$); &#10;    will( returnValue( $returnValue$ ));&#10;    $otherStatements$;&#10;}});&#10;" recursive="false" caseInsensitive="true" type="JAVA" reformatAccordingToStyle="true" shortenFQN="true" replacement="org.mockito.Mockito.when($mock$.$method$($params$)).thenReturn($returnValue$);&#10;&#10;$context$.checking(new Expectations(){{&#10;    $otherStatements$;&#10;}});&#10;">
        <constraint name="mock" within="" contains="" />
        <constraint name="method" within="" contains="" />
        <constraint name="returnValue" script="&quot;&quot;" within="" contains="" />
        <constraint name="params" script="&quot;&quot;" minCount="0" maxCount="2147483647" within="" contains="" />
        <constraint name="c" within="" contains="" />
        <constraint name="classMockery" script="&quot;&quot;" minCount="0" within="" contains="" />
        <constraint name="context" script="&quot;&quot;" within="" contains="" />
        <constraint name="otherStatements" script="&quot;&quot;" minCount="0" maxCount="2147483647" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="jmock2mockito one" text="$context$.checking(new Expectations(){{&#10;    one( $mock$ ).$method$($params$); will( returnValue( $returnValue$ ));&#10;    $otherStatements$;&#10;}});&#10;" recursive="false" caseInsensitive="true" type="JAVA" reformatAccordingToStyle="true" shortenFQN="true" replacement="org.mockito.Mockito.when($mock$.$method$($params$)).thenReturn($returnValue$);&#10;&#10;$context$.checking(new Expectations(){{&#10;    $otherStatements$;&#10;}});&#10;&#10;Mockito.verify($mock$, Mockito.times(1)).$method$($params$);&#10;">
        <constraint name="mock" within="" contains="" />
        <constraint name="method" within="" contains="" />
        <constraint name="returnValue" script="&quot;&quot;" within="" contains="" />
        <constraint name="params" script="&quot;&quot;" minCount="0" maxCount="2147483647" within="" contains="" />
        <constraint name="c" within="" contains="" />
        <constraint name="classMockery" script="&quot;&quot;" minCount="0" within="" contains="" />
        <constraint name="context" script="&quot;&quot;" within="" contains="" />
        <constraint name="otherStatements" script="&quot;&quot;" minCount="0" maxCount="2147483647" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="jmock2mockito remove empty expectation" text="        $context$.checking(new Expectations() {{&#10;        }});&#10;" recursive="false" caseInsensitive="true" type="JAVA" reformatAccordingToStyle="true" shortenFQN="true" replacement="">
        <constraint name="context" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="jmock2mockito verify one" text="$context$.checking(new Expectations(){{&#10;    one( $mock$ ).$method$($params$);&#10;    $otherStatements$;&#10;}});&#10;" recursive="false" caseInsensitive="true" type="JAVA" reformatAccordingToStyle="true" shortenFQN="true" replacement="$context$.checking(new Expectations(){{&#10;    $otherStatements$;&#10;}});&#10;&#10;Mockito.verify($mock$, Mockito.times(1)).$method$($params$);&#10;">
        <constraint name="mock" within="" contains="" />
        <constraint name="method" within="" contains="" />
        <constraint name="returnValue" script="&quot;&quot;" within="" contains="" />
        <constraint name="params" script="&quot;&quot;" minCount="0" maxCount="2147483647" within="" contains="" />
        <constraint name="c" within="" contains="" />
        <constraint name="classMockery" script="&quot;&quot;" minCount="0" within="" contains="" />
        <constraint name="context" script="&quot;&quot;" within="" contains="" />
        <constraint name="otherStatements" script="&quot;&quot;" minCount="0" maxCount="2147483647" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="jmock2mockito one argThat" text="$context$.checking(new Expectations(){{&#10;    one( $mock$ ).$method$(with($params$));&#10;    $otherStatements$;&#10;}});&#10;" recursive="false" caseInsensitive="true" type="JAVA" reformatAccordingToStyle="true" shortenFQN="true" replacement="$context$.checking(new Expectations(){{&#10;    $otherStatements$;&#10;}});&#10;&#10;Mockito.verify($mock$, Mockito.times(1)).$method$(Mockito.argThat($params$));&#10;">
        <constraint name="mock" within="" contains="" />
        <constraint name="method" within="" contains="" />
        <constraint name="returnValue" script="&quot;&quot;" within="" contains="" />
        <constraint name="params" script="&quot;&quot;" minCount="0" maxCount="2147483647" within="" contains="" />
        <constraint name="c" within="" contains="" />
        <constraint name="classMockery" script="&quot;&quot;" minCount="0" within="" contains="" />
        <constraint name="context" script="&quot;&quot;" within="" contains="" />
        <constraint name="otherStatements" script="&quot;&quot;" minCount="0" maxCount="2147483647" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="jmock2mockito sequence" text="final Sequence $sequence$ = $context$.sequence($seq$);" recursive="false" caseInsensitive="true" type="JAVA" reformatAccordingToStyle="true" shortenFQN="true" replacement="final InOrder inOrder = Mockito.inOrder();">
        <constraint name="sequence" within="" contains="" />
        <constraint name="context" within="" contains="" />
        <constraint name="seq" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="jmock2mockito with2argThat" text="Expectations.with($params$)" recursive="false" caseInsensitive="true" type="JAVA" reformatAccordingToStyle="true" shortenFQN="true" replacement="Mockito.argThat($params$)">
        <constraint name="mock" within="" contains="" />
        <constraint name="method" within="" contains="" />
        <constraint name="returnValue" script="&quot;&quot;" within="" contains="" />
        <constraint name="params" script="&quot;&quot;" minCount="0" maxCount="2147483647" within="" contains="" />
        <constraint name="c" within="" contains="" />
        <constraint name="classMockery" script="&quot;&quot;" minCount="0" within="" contains="" />
        <constraint name="context" script="&quot;&quot;" within="" contains="" />
        <constraint name="otherStatements" script="&quot;&quot;" maxCount="2147483647" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="jmock2mockito any to any" text="Expectations.any($params$)" recursive="false" caseInsensitive="true" type="JAVA" reformatAccordingToStyle="true" shortenFQN="true" replacement="Matchers.any($params$)">
        <constraint name="params" script="&quot;&quot;" minCount="0" maxCount="2147483647" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="jmock2mockito same to sameInstance" text="Expectations.same($params$)" recursive="false" caseInsensitive="true" type="JAVA" reformatAccordingToStyle="true" shortenFQN="true" replacement="Matchers.sameInstance($params$)">
        <constraint name="paams" within="" contains="" />
        <constraint name="params" script="&quot;&quot;" minCount="0" maxCount="2147483647" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Replace Nullcheck By Require" text="if ($param$ == null) throw new IllegalArgumentException( $message$ );&#10;" recursive="false" caseInsensitive="true" type="JAVA" reformatAccordingToStyle="true" shortenFQN="true" replacement="Require.notNull($param$,  $message$ );&#10;">
        <constraint name="p" within="" contains="" />
        <constraint name="param" within="" contains="" />
        <constraint name="message" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Replace Nullcheck with Block by Require" text="if ($param$ == null) { throw new IllegalArgumentException( $message$ );}&#10;" recursive="false" caseInsensitive="true" type="JAVA" reformatAccordingToStyle="true" shortenFQN="true" replacement="Require.notNull($param$,  $message$ );&#10;">
        <constraint name="p" within="" contains="" />
        <constraint name="param" within="" contains="" />
        <constraint name="message" within="" contains="" />
      </replaceConfiguration>
    </inspection_tool>
    <inspection_tool class="SamePackageImport" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="SerializableWithUnconstructableAncestor" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="SimplifiableIfStatement" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="SpellCheckingInspection" enabled="false" level="TYPO" enabled_by_default="false">
      <option name="processCode" value="true" />
      <option name="processLiterals" value="true" />
      <option name="processComments" value="true" />
    </inspection_tool>
    <inspection_tool class="SpringAopErrorsInspection" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="SpringBeanNameConventionInspection" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="SpringInjectionValueStyleInspection" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="StandardVariableNames" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="StaticCollection" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="m_ignoreWeakCollections" value="false" />
    </inspection_tool>
    <inspection_tool class="StaticInheritance" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="StaticMethodNamingConvention" enabled="false" level="WARNING" enabled_by_default="false">
      <option name="m_regex" value="[a-z][A-Za-z]*" />
      <option name="m_minLength" value="4" />
      <option name="m_maxLength" value="32" />
    </inspection_tool>
    <inspection_tool class="StaticSuite" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="StaticVariableInitialization" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="m_ignorePrimitives" value="false" />
    </inspection_tool>
    <inspection_tool class="StaticVariableNamingConvention" enabled="false" level="WARNING" enabled_by_default="false">
      <option name="checkMutableFinals" value="false" />
      <option name="m_regex" value="s_[a-z][A-Za-z]*" />
      <option name="m_minLength" value="5" />
      <option name="m_maxLength" value="32" />
    </inspection_tool>
    <inspection_tool class="StaticVariableUninitializedUse" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="m_ignorePrimitives" value="false" />
    </inspection_tool>
    <inspection_tool class="StringBufferReplaceableByString" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="StrutsTilesInspection" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="SubtractionInCompareTo" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="SwitchStatementWithConfusingDeclaration" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="SwitchStatementsWithoutDefault" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="m_ignoreFullyCoveredEnums" value="true" />
    </inspection_tool>
    <inspection_tool class="SystemOutErr" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="TailRecursionJS" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="TestMethodIsPublicVoidNoArg" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="TextLabelInSwitchStatement" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="ThrowableInstanceNeverThrown" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="ThrowableResultOfMethodCallIgnored" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="TransientFieldInNonSerializableClass" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="TrivialIf" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="UNCHECKED_WARNING" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="UnnecessarilyQualifiedStaticUsage" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="m_ignoreStaticFieldAccesses" value="false" />
      <option name="m_ignoreStaticMethodCalls" value="false" />
      <option name="m_ignoreStaticAccessFromStaticContext" value="false" />
    </inspection_tool>
    <inspection_tool class="UnnecessaryBlockStatement" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="ignoreSwitchBranches" value="false" />
    </inspection_tool>
    <inspection_tool class="UnnecessaryBoxing" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="UnnecessaryContinue" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="UnnecessaryUnboxing" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="UnusedImport" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="WaitNotInLoop" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="WebProperties" enabled="true" level="WARNING" enabled_by_default="true" />
  </profile>
</component>